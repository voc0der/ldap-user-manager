#!/bin/bash
set -e

ssl_dir="/opt/ssl"
php_dir="/opt/ldap_user_manager"

# Function to handle environment variable _FILE replacements
env_file_replace() {
  for env_file in $(env|grep _FILE=); do
    read -a env <<< "$(echo "$env_file" | sed 's/\(.*\)_FILE=\(.*\)/\1 \2/')"
    if [ -s "${env[1]}" ]; then
      echo Setting "${env[0]}" from "${env[1]}"
      export "${env[0]}"="$(cat "${env[1]}")"
    else
      echo "${env[1]} does not exist or is empty. Leaving ${env[0]} unset"
    fi
  done
}

# Set default PUID and PGID if not provided
PUID=${PUID:-1000}
PGID=${PGID:-1000}

# Create a group and user if they don't already exist
if ! getent group appgroup >/dev/null; then
  groupadd -g "${PGID}" appgroup
fi
if ! id -u appuser >/dev/null 2>&1; then
  useradd -u "${PUID}" -g appgroup -m appuser
fi

# Ensure proper permissions on php_dir if writable
if [ -w "$php_dir" ]; then
  chown -R appuser:appgroup "$php_dir"
else
  echo "$php_dir is read-only, skipping chown operation"
fi

# Export environment variables for Apache
export APACHE_RUN_USER=appuser
export APACHE_RUN_GROUP=appgroup

# Debugging: Log all environment variables for review
echo "Dumping environment variables to /tmp/container_env.log"
env > /tmp/container_env.log

# Set default SERVER_HOSTNAME if not provided
if [ -z "$SERVER_HOSTNAME" ]; then
  export SERVER_HOSTNAME="ldapusermanager.org"
fi
if [ -z "$SERVER_PATH" ]; then
  export SERVER_PATH="/"
  apache_alias=""
else
  apache_alias="Alias $SERVER_PATH $php_dir"
fi

# Run environment file replacements
env_file_replace

########################
# Run Apache

# First arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
        set -- apache2-foreground "$@"
fi

# Execute the command directly
exec "$@"
